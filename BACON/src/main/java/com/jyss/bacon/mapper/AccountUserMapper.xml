
<!--  <?xml version="1.0" encoding="UTF-8" ?>-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jyss.yqy.mapper.AccountUserMapper" > 

    <resultMap type="com.jyss.yqy.entity.AccountUser" id="auResultMap">   
        <id property="id" column="id"  />
        <result property="roleId" column="roleId"  />
        <result property="name" column="name"  />
        <result property="roleSign" column="role_sign"  />
        <result property="roleName" column="role_name"  />
        <result property="permissionName" column="permission_name"  />
        <result property="permissionSign" column="permission_sign"  />
        <result property="username" column="username"  />
        <result property="pwd" column="pwd"  />
        <result property="salt" column="salt"  />
        <result property="status" column="status"  />
        <result property="createdAt" column="created_at"  />
        <result property="lastLoginTime" column="last_login_time"  />
        <result property="cjsj" column="cjsj"  />
        <result property="dlsj" column="dlsj"  />

    </resultMap>     
             
    
    <select id="getAuBy" resultType="com.jyss.yqy.entity.AccountUser">     
	     select *  from p_account_users_b  				
         <where> 
              1 = 1
			  <if test="username != null and username !=''"> and username = #{username} </if> 		
		 </where> 
    </select> 
    
  <!--   <select id="getAuBy" resultType="com.jyss.yqy.entity.AccountUser">  
        select t.* from (
		        select p.*,r.role_name as roleName ,r.role_sign as roleSign from p_account_users_b p 
				left join  p_account_role r
				on p.role_id = r.id ) t
         <where> 
              t.status = 1
			  <if test="username != null and username !=''"> and t.username = #{username} </if> 		
		 </where> 
    </select>  -->
    
    <select id="getAuByUsernameAndPassword" resultType="com.jyss.yqy.entity.AccountUser">  
        select t.* from (
		        select p.*,r.role_name as roleName ,r.role_sign as roleSign from p_account_users_b p 
				left join  p_account_role r
				on p.role_id = r.id ) t
         <where> 
               t.status = 1
			  <if test="username != null and username !=''"> and t.username = #{username} </if> 		
			  <if test="pwd != null and pwd !=''"> and t.pwd = #{pwd} </if> 		
		 </where> 
    </select>
    
    <select id="getAuByUsername" resultMap="auResultMap">  
        select t.*,DATE_FORMAT(t.created_at, '%Y-%m-%d %H:%i:%s' ) cjsj,DATE_FORMAT(t.last_login_time, '%Y-%m-%d %H:%i:%s' ) dlsj from (
		        select p.*,r.role_name as roleName ,r.role_sign as roleSign from p_account_users_b p 
				left join  p_account_role r
				on p.role_id = r.id ) t
         <where> 
               1 = 1
			  <if test="username != null and username !='' and username !='XXX' "> and t.username  LIKE CONCAT('%',#{username},'%')   </if> 					
		 </where> 
		 order by t.status desc,t.created_at desc
    </select>
    
   <select id="getPermissionBy" resultMap="auResultMap">  
        select t.* from (
		       select p.*,r.role_name ,r.role_sign,m.permission_name,m.permission_sign  from p_account_users_b p 
					left join  p_account_role r
					on p.role_id = r.id
					left join  p_account_role_permission n
					on p.role_id = n.role_id
					left join  p_permission m
					on  n.permission_id = m.id ) t
         <where> 
              t.status = 1
			  <if test="username != null and username !=''"> and t.username = #{username} </if> 		
		 </where> 
    </select> 
    
    
    <select id="getAuNum" resultType="int">  
        select count(*) from p_account_users_b 
         <where> 
              1 = 1
			  <if test="username != null and username !=''"> and  username = #{username} </if> 		
		 </where> 
    </select> 
    
    <!--角色列表 --> 
     <select id="getRoles" resultMap="auResultMap">  
        select  * from p_account_role        
    </select> 
   
    <!--修改密码 --> 
    <update id="upHtPwd" parameterType="String" >
        update p_account_users_b  set pwd = #{password},salt = #{salt}   where username = #{username} and  status = 1
    </update>
    
    <!--禁用用户 --> 
    <update id="upAccountStatus" parameterType="java.util.List" >
        update p_account_users_b  set status = #{status}  where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">   
	        #{id}   
	    </foreach>  
    </update>
    
    <!-- 删除用户 -->
     <delete id="deleteAccounts" parameterType="java.util.List">
        delete from p_account_users_b where id in 
	    <foreach collection="ids" item="id" open="(" separator="," close=")">   
	        #{id}   
	    </foreach>  
    </delete>
    
    <!-- 增加用户 -->
    <insert id="addAccount" parameterType="com.jyss.yqy.entity.AccountUser" 
        useGeneratedKeys="true" keyProperty="id"> 
        insert into p_account_users_b values(null,#{roleId},'',#{username},#{pwd},#{name},now(),now(),#{status},#{salt})             
    </insert>
    
     <!--修改用户 --> 
    <update id="upAccount" parameterType="com.jyss.yqy.entity.AccountUser" >
        update p_account_users_b  set role_id =#{roleId},pwd = #{pwd},salt = #{salt},username = #{username} ,created_at = now()
             where id =#{id}
    </update>

</mapper>